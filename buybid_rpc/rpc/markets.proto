syntax = "proto3";

package rpc;

service Markets {
  rpc search_product_cards(SearchProductCardsReq) returns (SearchProductCardsResp) {}

  rpc get_product_detail(GetProductDetailReq) returns (GetProductDetailResp) {}

  rpc parse_link(ParseLinkReq) returns (ParseLinkResp) {}
}

message SearchProductCardsReq {
    string buybid_market_name = 1;
    int32 page_index = 2;
    int32 page_size = 3;
    string filters = 4;
}

message SearchProductCardsResp {
    string buybid_market_name = 1;
    int32 page_index = 2;
    int32 page_next = 3;
    int32 page_size = 4;
    string filters = 5;
    repeated Product products = 6;
    repeated Seller sellers = 7;
}

message GetProductDetailReq {
    string buybid_market_name = 1;
    string product_id = 2;
}

message GetProductDetailResp {
    string buybid_market_name = 1;
    string product_id = 2;
    Product product = 3;
}

message ParseLinkReq {
    string buybid_market_name = 1;
    string link_url = 2;
}

message ParseLinkResp {
    string buybid_market_name = 1;
    string link_url = 2;
    string link_home_url = 3;
    map<string, string> data = 4;
}

message Seller {
    string id = 1;
    string name = 2;
    string rating_point = 3;
    string rating_url = 4;
    string popular = 5;
}

message ProductAttributes {
    string buybid_market_name = 1;
    string name = 2;
    string description = 3;
    int64 available_on = 4;
    int32 tax_category_id = 5;
    string price = 6;
    string currency = 7;
    int32 shipping_category_id = 8;
    string meta_title = 9;
    string meta_keywords = 10;
    string meta_description = 11;
    repeated string tag_list = 12;
}

message ProductProperty {
    string name = 1;
    string value = 2;
}

message ProductOptionValue {
    string name = 1;
    string value = 2;
}

message Product {
    string buybid_market_name = 1;
    string image_url = 2;
    ProductAttributes attributes = 3;
    repeated int32 buybid_category_ids = 4;
    repeated ProductProperty properties = 5;
    repeated ProductOptionValue option_values = 6;
}
